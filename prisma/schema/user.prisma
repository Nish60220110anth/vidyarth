model user {
  id Int @id @default(autoincrement())

  name     String
  pgpid    String? @unique
  pcomid   String?
  email_id String  @unique

  password String
  role     USER_ROLE

  is_active   Boolean @default(false)
  is_verified Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  last_login DateTime?

  alum_experiences company_alum_exp[]
  authored_news    news[]

  shadow_as_user1 shadowpair? @relation("shadowuser1")
  shadow_as_user2 shadowpair? @relation("shadowuser2")

  // DISHA relation (1-to-1)
  disha_profile dishamentee? @relation("dishaprofile")

  // DISHA mentorship role (1-to-many)
  disha_mentees dishamentee[] @relation("dishamentor")

  domain_preference userdomainpreference? @relation("userdomain")
  known_languages   userlanguage[]        @relation("languagesknown")
  shortlists        shortlist[]           @relation("shortlistusers")
  announcements     announcements[]

  @@unique([pgpid, pcomid])
}

model dishamentee {
  id Int @id @default(autoincrement())

  user_id Int  @unique
  user    user @relation("dishaprofile", fields: [user_id], references: [id])

  mentor_id Int?
  mentor    user? @relation("dishamentor", fields: [mentor_id], references: [id])

  placement_cycle_id Int
  placement_cycle    placement_cycle @relation(fields: [placement_cycle_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model shadowpair {
  id Int @id @default(autoincrement())

  user1   user @relation("shadowuser1", fields: [user1Id], references: [id])
  user1Id Int  @unique
  user2   user @relation("shadowuser2", fields: [user2Id], references: [id])
  user2Id Int  @unique
}

model userlanguage {
  id Int @id @default(autoincrement())

  user_id Int
  user    user @relation("languagesknown", fields: [user_id], references: [id])

  language    LANGUAGE
  proficiency PROFICIENCY

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, language])
}
