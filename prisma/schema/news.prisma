model news {
  id String @id @default(cuid())

  title          String
  content        String  @db.Text
  link_to_source String? @db.Text

  is_active   Boolean @default(true)
  is_approved Boolean @default(false)

  news_tag      NEWS_DOMAIN_TAG
  subdomain_tag NEWS_SUBDOMAIN_TAG?

  image_url     String? @db.Text
  firebase_path String?

  author_id  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  author user @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  companies news_company[]
  domains   news_domain[]
}

model news_company {
  id         Int    @id @default(autoincrement())
  news_id    String
  company_id Int

  news    news    @relation(fields: [news_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  company company @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([news_id, company_id])
}

model news_domain {
  id      Int    @id @default(autoincrement())
  news_id String
  domain  DOMAIN

  news news @relation(fields: [news_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([news_id, domain])
}
